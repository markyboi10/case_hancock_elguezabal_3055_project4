/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package carschema;

import java.awt.Color;
import java.awt.Component;
import java.awt.Graphics;
import java.awt.Image;
import java.io.IOException;
import java.net.URL;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import java.lang.String;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Mark Case
 */
public class theGUI extends javax.swing.JFrame implements Runnable {

    public static Connection con; // connection for mysql database
    private int second, minute, hour; // 24 clock fields    
    
    /**
     * Creates new form theGUI
     * Default constructor
     */
    public theGUI() {
        initComponents();
        Thread t = new Thread(this);
        t.start(); // start thread for run method

    } // end theGUI
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        menuPnl = new javax.swing.JPanel();
        e46 = new javax.swing.JRadioButton();
        e90 = new javax.swing.JRadioButton();
        f80 = new javax.swing.JRadioButton();
        selectChassisLbl = new javax.swing.JLabel();
        threeTwentyEight = new javax.swing.JButton();
        threeThirty = new javax.swing.JButton();
        mThree = new javax.swing.JButton();
        menuIconAndLbl = new javax.swing.JLabel();
        selectModelLbl = new javax.swing.JLabel();
        mainPnl = new javax.swing.JPanel();
        tableScrollPane = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        headerPnl = new javax.swing.JPanel();
        headerLbl = new javax.swing.JLabel();
        headerIcon = new javax.swing.JLabel();
        clockPnl = new javax.swing.JPanel();
        timeLbl = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        menuPnl.setBackground(new java.awt.Color(30, 61, 89));

        buttonGroup1.add(e46);
        e46.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        e46.setForeground(new java.awt.Color(245, 240, 225));
        e46.setText("E46");
        e46.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                e46ActionPerformed(evt);
            }
        });

        buttonGroup1.add(e90);
        e90.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        e90.setForeground(new java.awt.Color(245, 240, 225));
        e90.setText("E90");
        e90.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                e90ActionPerformed(evt);
            }
        });

        buttonGroup1.add(f80);
        f80.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        f80.setForeground(new java.awt.Color(245, 240, 225));
        f80.setText("F80");
        f80.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                f80ActionPerformed(evt);
            }
        });

        selectChassisLbl.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        selectChassisLbl.setForeground(new java.awt.Color(245, 240, 225));
        selectChassisLbl.setText("Select your Chassis:");
        selectChassisLbl.setToolTipText("A Chassis refers to the frame on which a car is built upon");

        threeTwentyEight.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        threeTwentyEight.setForeground(new java.awt.Color(30, 61, 89));
        threeTwentyEight.setText("328i");
        buttonGroup1.add(threeTwentyEight);
        threeTwentyEight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                threeTwentyEightActionPerformed(evt);
            }
        });

        threeThirty.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        threeThirty.setForeground(new java.awt.Color(30, 61, 89));
        threeThirty.setText("330i");
        buttonGroup1.add(threeThirty);
        threeThirty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                threeThirtyActionPerformed(evt);
            }
        });

        mThree.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        mThree.setForeground(new java.awt.Color(30, 61, 89));
        mThree.setText("M3");
        buttonGroup1.add(mThree);
        mThree.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mThreeActionPerformed(evt);
            }
        });

        menuIconAndLbl.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        menuIconAndLbl.setForeground(new java.awt.Color(245, 240, 225));
        menuIconAndLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/carschema/icons8-menu-64 (4).png"))); // NOI18N
        menuIconAndLbl.setText("Menu");

        selectModelLbl.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        selectModelLbl.setForeground(new java.awt.Color(245, 240, 225));
        selectModelLbl.setText("Select Your Model:");
        selectModelLbl.setToolTipText("3 Series Models availible ");

        javax.swing.GroupLayout menuPnlLayout = new javax.swing.GroupLayout(menuPnl);
        menuPnl.setLayout(menuPnlLayout);
        menuPnlLayout.setHorizontalGroup(
            menuPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuPnlLayout.createSequentialGroup()
                .addGroup(menuPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(menuPnlLayout.createSequentialGroup()
                        .addGap(104, 104, 104)
                        .addComponent(menuIconAndLbl))
                    .addGroup(menuPnlLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(menuPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(menuPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(e90)
                                .addGroup(menuPnlLayout.createSequentialGroup()
                                    .addComponent(selectChassisLbl)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(e46))
                                .addComponent(f80))
                            .addGroup(menuPnlLayout.createSequentialGroup()
                                .addComponent(selectModelLbl)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(menuPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(mThree, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                    .addComponent(threeThirty, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                    .addComponent(threeTwentyEight, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(89, Short.MAX_VALUE))
        );
        menuPnlLayout.setVerticalGroup(
            menuPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuPnlLayout.createSequentialGroup()
                .addComponent(menuIconAndLbl)
                .addGap(22, 22, 22)
                .addGroup(menuPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectChassisLbl)
                    .addComponent(e46))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(e90)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(f80)
                .addGap(21, 21, 21)
                .addGroup(menuPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(selectModelLbl)
                    .addComponent(threeTwentyEight))
                .addGap(39, 39, 39)
                .addComponent(threeThirty)
                .addGap(42, 42, 42)
                .addComponent(mThree)
                .addContainerGap(43, Short.MAX_VALUE))
        );

        mainPnl.setBackground(new java.awt.Color(255, 110, 64));

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Model Name", "Engine Name", "Cylinder #", "Horsepower", "Torque", "MSRP", "Chassis Code", "Production Years"
            }
        ));
        tableScrollPane.setViewportView(table);

        javax.swing.GroupLayout mainPnlLayout = new javax.swing.GroupLayout(mainPnl);
        mainPnl.setLayout(mainPnlLayout);
        mainPnlLayout.setHorizontalGroup(
            mainPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tableScrollPane)
                .addContainerGap())
        );
        mainPnlLayout.setVerticalGroup(
            mainPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tableScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        headerPnl.setBackground(new java.awt.Color(245, 240, 225));

        headerLbl.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        headerLbl.setForeground(new java.awt.Color(0, 0, 0));
        headerLbl.setText("The Ultimate BMW Forum");

        headerIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/carschema/bmw.png"))); // NOI18N

        javax.swing.GroupLayout headerPnlLayout = new javax.swing.GroupLayout(headerPnl);
        headerPnl.setLayout(headerPnlLayout);
        headerPnlLayout.setHorizontalGroup(
            headerPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerPnlLayout.createSequentialGroup()
                .addGap(297, 297, 297)
                .addComponent(headerLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(headerIcon)
                .addContainerGap(289, Short.MAX_VALUE))
        );
        headerPnlLayout.setVerticalGroup(
            headerPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(headerLbl)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(headerIcon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        clockPnl.setBackground(new java.awt.Color(30, 61, 89));

        timeLbl.setBackground(new java.awt.Color(30, 61, 89));
        timeLbl.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        timeLbl.setForeground(new java.awt.Color(245, 240, 225));

        javax.swing.GroupLayout clockPnlLayout = new javax.swing.GroupLayout(clockPnl);
        clockPnl.setLayout(clockPnlLayout);
        clockPnlLayout.setHorizontalGroup(
            clockPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(clockPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(timeLbl, javax.swing.GroupLayout.DEFAULT_SIZE, 66, Short.MAX_VALUE)
                .addContainerGap())
        );
        clockPnlLayout.setVerticalGroup(
            clockPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(clockPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(timeLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(menuPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(headerPnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(clockPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(mainPnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(menuPnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(headerPnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(clockPnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mainPnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    
    
    /*
    Action performed method
    Listens for radio buttons clicks and displays results accordingly 
    */    
    private void threeTwentyEightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_threeTwentyEightActionPerformed
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        
        String btnChassis = "";
        String callStmt = "";

        if(e46.isSelected()) {
            
            btnChassis = "E46";
            callStmt = "{Call BMW('328i', '" + btnChassis + "')}"; 
        } else if(e90.isSelected()) {
            //JOptionPane.showMessageDialog(bmwLogoPnl, "e90 328i");
            btnChassis = "E90";
            callStmt = "{Call BMW('328i', '" + btnChassis + "')}";
        } else if (f80.isSelected()) {
            //JOptionPane.showMessageDialog(bmwLogoPnl, "f80 328i");
            btnChassis = "F80";
            callStmt = "{Call BMW('328i', '" + btnChassis + "')}";
        } else {
            JOptionPane.showMessageDialog(menuPnl, "Please select a chassis");
        }
        
        try {
                CallableStatement myStoredProcedureCall = con.prepareCall(callStmt); //"{Call e46_328i(\"328i\", \"E46\")}");
                ResultSet myResults1 = myStoredProcedureCall.executeQuery();
                 //Iterate over the ResultSet, row by row
                while (myResults1.next())
                {
                String myEngineName = myResults1.getString("engineName");
                String myModelName = myResults1.getString("modelName");
                String myCylinderKount = myResults1.getString("cylinderKount");
                String myHorsepower = myResults1.getString("horsepower");
                String myTorque = myResults1.getString("torque");
                String myCost = myResults1.getString("cost");
                String myChassisCode = myResults1.getString("chassisCode");
                String myStartDate = myResults1.getString("startDate");
                String myEndDate = myResults1.getString("endDate");

                model.addRow(new Object[]{myModelName, myEngineName, myCylinderKount, myHorsepower + " hp", myTorque + " ft/lbs", "$" + myCost
                , myChassisCode, myStartDate + "-" + myEndDate});
                
                }
            } catch (SQLException ex) {
                System.out.println("No chassis has been selected");
            } // end try-catch

        // set background color of buttons when selected
        threeTwentyEight.setBackground(new Color(83, 80, 212));
        threeThirty.setBackground(new Color(174,189,196));
        mThree.setBackground(new Color(174,189,196));
    }//GEN-LAST:event_threeTwentyEightActionPerformed

    
    
    /*
    Action performed method
    Listens for radio buttons clicks and displays results accordingly 
    */  
    private void threeThirtyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_threeThirtyActionPerformed
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        
        String btnChassis = "";
        String callStmt = "";
        
        if(e46.isSelected()) {
            btnChassis = "E46";
            callStmt = "{Call BMW('330i', '" + btnChassis + "')}"; 
        } else if(e90.isSelected()) {
            //JOptionPane.showMessageDialog(bmwLogoPnl, "e90 330i");
            btnChassis = "E90";
            callStmt = "{Call BMW('330i', '" + btnChassis + "')}";
        } else if (f80.isSelected()) {
            //JOptionPane.showMessageDialog(bmwLogoPnl, "f80 330i");
            btnChassis = "F80";
            callStmt = "{Call BMW('330i', '" + btnChassis + "')}";
        } else {
            JOptionPane.showMessageDialog(menuPnl, "Please select a chassis");
        }
        
        try {
                CallableStatement myStoredProcedureCall = con.prepareCall(callStmt); //"{Call e46_328i(\"328i\", \"E46\")}");
                ResultSet myResults1 = myStoredProcedureCall.executeQuery();
                 //Iterate over the ResultSet, row by row
                while (myResults1.next()) {
                String myEngineName = myResults1.getString("engineName");
                String myModelName = myResults1.getString("modelName");
                String myCylinderKount = myResults1.getString("cylinderKount");
                String myHorsepower = myResults1.getString("horsepower");
                String myTorque = myResults1.getString("torque");
                String myCost = myResults1.getString("cost");
                String myChassisCode = myResults1.getString("chassisCode");
                String myStartDate = myResults1.getString("startDate");
                String myEndDate = myResults1.getString("endDate");

                model.addRow(new Object[]{myModelName, myEngineName, myCylinderKount, myHorsepower + " hp", myTorque + " ft/lbs", "$" + myCost
                , myChassisCode, myStartDate + "-" + myEndDate});
                          
                } // end while
            } catch (SQLException ex) {
                System.out.println("No chassis has been selected");
            } // end try-catch

        // set background color of buttons when selected
        threeThirty.setBackground(new Color(83, 80, 212));
        threeTwentyEight.setBackground(new Color(174,189,196));
        mThree.setBackground(new Color(174,189,196));
    }//GEN-LAST:event_threeThirtyActionPerformed

    
    
    /*
    Action performed method
    Listens for radio buttons clicks and displays results accordingly 
    */  
    private void mThreeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mThreeActionPerformed
        DefaultTableModel model = (DefaultTableModel) table.getModel();
          
        String btnChassis = "";
        String callStmt = "";
        
        if(e46.isSelected()) {
            btnChassis = "E46";
            callStmt = "{Call BMW('M3', '" + btnChassis + "')}"; 
        } else if(e90.isSelected()) {
            btnChassis = "E90";
            callStmt = "{Call BMW('M3', '" + btnChassis + "')}";
        } else if (f80.isSelected()) {
           btnChassis = "F80";
            callStmt = "{Call BMW('M3', '" + btnChassis + "')}";
        } else {
            JOptionPane.showMessageDialog(menuPnl, "Please select a chassis");
        }
        
        try {
                CallableStatement myStoredProcedureCall = con.prepareCall(callStmt); //"{Call e46_328i(\"328i\", \"E46\")}");
                ResultSet myResults1 = myStoredProcedureCall.executeQuery();
                //Iterate over the ResultSet, row by row
                while (myResults1.next()) {
                String myEngineName = myResults1.getString("engineName");
                String myModelName = myResults1.getString("modelName");
                String myCylinderKount = myResults1.getString("cylinderKount");
                String myHorsepower = myResults1.getString("horsepower");
                String myTorque = myResults1.getString("torque");
                String myCost = myResults1.getString("cost");
                String myChassisCode = myResults1.getString("chassisCode");
                String myStartDate = myResults1.getString("startDate");
                String myEndDate = myResults1.getString("endDate");

                model.addRow(new Object[]{myModelName, myEngineName, myCylinderKount, myHorsepower + " hp", myTorque + " ft/lbs", "$" + myCost
                , myChassisCode, myStartDate + "-" + myEndDate});      
                } // end while
            } catch (SQLException ex) {
                System.out.println("No chassis has been selected");
            } // end try-catch
        
        // set background color of buttons when selected
        threeTwentyEight.setBackground(new Color(174,189,196));
        threeThirty.setBackground(new Color(174,189,196));
        mThree.setBackground(new Color(83, 80, 212));
    }//GEN-LAST:event_mThreeActionPerformed

    
    
    /*
    Close connection to database when jFrame is closing
    */
    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
         try {            
            con.close();
            System.out.println("Bye, bye");
        } catch (SQLException ex) {
            Logger.getLogger(theGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formWindowClosing

    
    
    /*
    Reset the color back to default upon radio button selection
    Follows standard UI practice 
    */
    public void resetBtnColor() {
        if(e46.isSelected() || e90.isSelected() || f80.isSelected()) {
            threeThirty.setBackground(new Color(174,189,196));
            threeTwentyEight.setBackground(new Color(174,189,196));
            mThree.setBackground(new Color(174,189,196));
        }
    } // end resetBtnColor
    
    
    
    /*
    Linking aresetBtnColor functionality to radio buttons
    */
    private void e46ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_e46ActionPerformed
        resetBtnColor();
    }//GEN-LAST:event_e46ActionPerformed
    private void e90ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_e90ActionPerformed
        resetBtnColor();
    }//GEN-LAST:event_e90ActionPerformed
    private void f80ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_f80ActionPerformed
        resetBtnColor();
    }//GEN-LAST:event_f80ActionPerformed

    
    
    /*
    Run method for 24h clock
    */
    @Override
    public void run() {
        while(true) {
            Calendar cal = Calendar.getInstance();
            hour = cal.get(Calendar.HOUR_OF_DAY);
            minute = cal.get(Calendar.MINUTE);
            second = cal.get(Calendar.SECOND);
            
            // for 24 hour time
            SimpleDateFormat sdf24 = new SimpleDateFormat("HH:mm:ss");
            Date date = cal.getTime();
            String time24 = sdf24.format(date);
            
            // set it to label
            timeLbl.setText(time24);
        }
    } // end run

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JPanel clockPnl;
    private javax.swing.JRadioButton e46;
    private javax.swing.JRadioButton e90;
    private javax.swing.JRadioButton f80;
    private javax.swing.JLabel headerIcon;
    private javax.swing.JLabel headerLbl;
    private javax.swing.JPanel headerPnl;
    private javax.swing.JButton mThree;
    private static javax.swing.JPanel mainPnl;
    private javax.swing.JLabel menuIconAndLbl;
    private static javax.swing.JPanel menuPnl;
    private javax.swing.JLabel selectChassisLbl;
    private javax.swing.JLabel selectModelLbl;
    private static javax.swing.JTable table;
    private javax.swing.JScrollPane tableScrollPane;
    private javax.swing.JButton threeThirty;
    private javax.swing.JButton threeTwentyEight;
    private javax.swing.JLabel timeLbl;
    // End of variables declaration//GEN-END:variables

} // end theGUI class
